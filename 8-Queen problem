N = 8

def print_board(board):
    for row in board:
        print(" ".join("Q" if x else "." for x in row))
    print()

def is_safe(board, row, col):
    # Check column
    for i in range(row):
        if board[i][col]:
            return False
    # Check upper left diagonal
    for i, j in zip(range(row,-1,-1), range(col,-1,-1)):
        if board[i][j]:
            return False
    # Check upper right diagonal
    for i, j in zip(range(row,-1,-1), range(col,N)):
        if board[i][j]:
            return False
    return True

def solve(board, row=0):
    if row == N:
        print_board(board)
        return True
    for col in range(N):
        if is_safe(board, row, col):
            board[row][col] = 1
            if solve(board, row+1):
                return True
            board[row][col] = 0
    return False

# Driver code
board = [[0]*N for _ in range(N)]
solve(board)
