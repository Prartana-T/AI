from collections import deque

def water_jug(a, b, target):
    visited = set()
    q = deque([(0, 0)])   # (jug1, jug2)

    while q:
        x, y = q.popleft()

        if (x, y) in visited:
            continue
        visited.add((x, y))

        print(x, y)   # print the step

        if x == target or y == target:
            print("Reached target!")
            return True

        # Possible operations
        q.append((a, y))       # Fill jug1
        q.append((x, b))       # Fill jug2
        q.append((0, y))       # Empty jug1
        q.append((x, 0))       # Empty jug2
        # Pour jug1 → jug2
        q.append((x - min(x, b - y), y + min(x, b - y)))
        # Pour jug2 → jug1
        q.append((x + min(y, a - x), y - min(y, a - x)))

    print("No solution!")
    return False


# Example usage
a, b, target = 4, 3, 2   # jugs of 4L & 3L, target = 2L
water_jug(a, b, target)
